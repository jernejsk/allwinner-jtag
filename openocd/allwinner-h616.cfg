adapter speed 1000
adapter driver ftdi
ftdi vid_pid 0x0403 0x6014
ftdi layout_init 0x0008 0x000b
transport select jtag

if { [info exists CHIPNAME] } {
	set  _CHIPNAME $CHIPNAME
} else {
	set  _CHIPNAME h616
}

# There are 8 cores, but they are not enabled at boot
if { [info exists CHIPCORES] } {
	set _cores $CHIPCORES
} else {
	set _cores 4
}

if { [info exists USE_SMP] } {
	set _USE_SMP $USE_SMP
} else {
	set _USE_SMP 0
}

if { [info exists DAP_TAPID] } {
        set _DAP_TAPID $DAP_TAPID
} else {
        set _DAP_TAPID 0x5ba00477
}

jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x01 -irmask 0x0f \
        -expected-id $_DAP_TAPID

dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

target create $_CHIPNAME.ahb mem_ap -dap $_CHIPNAME.dap -ap-num 0

# these addresses were found by examining memory
set _DBGBASE {0x09410000 0x09510000 0x09610000 0x09710000}
set _CTIBASE {0x09420000 0x09520000 0x09620000 0x09720000}

set _smp_command "target smp"

#TODO: CPU doesn't halt

for { set _core 0 } { $_core < $_cores } { incr _core } {
	set _CTINAME $_CHIPNAME.cti$_core
	set _TARGETNAME $_CHIPNAME.cpu$_core
	set dbg_addr [lindex $_DBGBASE $_core]

	cti create $_CTINAME -dap $_CHIPNAME.dap -ap-num 0 -baseaddr [lindex $_CTIBASE $_core]
	target create $_TARGETNAME aarch64 -dap $_CHIPNAME.dap -ap-num 0 -rtos hwthread -dbgbase $dbg_addr -cti $_CTINAME -coreid  $_core

	$_TARGETNAME configure -event examine-start \
		"$_CHIPNAME.ahb mww [expr {$dbg_addr + 0xfb0}] 0xC5ACCE55"

	set _smp_command "$_smp_command $_TARGETNAME"
}

if {$_USE_SMP} {
	eval $_smp_command
}

targets $_CHIPNAME.cpu0
